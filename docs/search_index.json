[["index.html", "Вежби од Statistical Rethinking Chapter 1 За овој bookdown проект", " Вежби од Statistical Rethinking Novica Nakov 2022-01-21 Chapter 1 За овој bookdown проект Statistical Rethinking e популарна книга за учење моделирање на податоци. Предавањата се јавно достапни и одлични. Ова се вежбите и моите решенија од книгата (која што може да се најде на интернет во PDF). Текстот ќе биде измешан на македонски и англиски. Вежбите се ископирани од книгата и на англиски. Некои мои дообјаснувања и размислувања можеби ќе бидат на англиски, а можеби на македонски. Моето читање на книгата и следење на предавањата коинцидира со клубот на R4DS. Содржините таму се целосно на англиски. "],["small-worlds-and-large-worlds.html", "Chapter 2 Small Worlds and Large Worlds", " Chapter 2 Small Worlds and Large Worlds Exercises from Chapter 2 of the book. library(tidyverse) library(patchwork) 2M1. Recall the globe tossing model from the chapter. Compute and plot the grid approximate posterior distribution for each of the following sets of observations. In each case, assume a uniform prior for p. 1. W, W, W 2. W, W, W, L 3. L, W, W, L, W, W, W There are three datasets for this problem. Let’s store them in a list for ease of work below. data_1 &lt;- c(&quot;W&quot;, &quot;W&quot;, &quot;W&quot;) data_2 &lt;- c(&quot;W&quot;, &quot;W&quot;, &quot;W&quot;, &quot;L&quot;) data_3 &lt;- c(&quot;L&quot;, &quot;W&quot;, &quot;W&quot;, &quot;L&quot;, &quot;W&quot;, &quot;W&quot;, &quot;W&quot;) data_lst &lt;- list(data_1, data_2, data_3) names(data_lst) &lt;- c(&quot;data_1&quot;, &quot;data_2&quot;, &quot;data_3&quot;) # define grid same for all p_grid &lt;- seq(from = 0, to = 1, length.out = 1000) # define prior same for all prob_p &lt;- rep(1, 1000) #compute posterior posterior &lt;- function(data, p_grid, prob_p, plot = TRUE) { # compute likelihood at each value in grid prob_data &lt;- dbinom( sum(data == &quot;W&quot;), size=length(data) , prob=p_grid ) # compute product of likelihood and prior posterior &lt;- prob_data * prob_p # standardize the posterior, so it sums to 1 posterior &lt;- posterior / sum(posterior) data_for_plot &lt;- data.frame(param = p_grid, posterior = posterior) if (plot) { p &lt;- ggplot(data_for_plot) + aes(x = param, y = posterior ) + geom_line() + labs(x = &quot;Proportion of Water&quot;, y = &quot;Posterior Probability&quot;) + theme_minimal() p } else { posterior } } plots &lt;- lapply(data_lst, posterior, p_grid, prob_p) plots[[1]]+ plots[[2]]+ plots[[3]] 2M2. Now assume a prior for p that is equal to zero when p &lt; 0.5 and is a positive constant when p ≥ 0.5. Again compute and plot the grid approximate posterior distribution for each of the sets of observations in the problem just above. Exercise 2M2 is basically the same as 2M1. The only difference is the prior. Let’s try it with a more of a tidyverse solution. data_for_plots &lt;- tibble(p_grid = seq(from = 0, to = 1, length.out = 1000)) %&gt;% mutate(prior = if_else(p_grid &lt; 0.5, 0, 1)) %&gt;% mutate(data_1 = dbinom(sum(data_1 == &quot;W&quot;), size=length(data_1), prob = p_grid)) %&gt;% mutate(data_2 = dbinom(sum(data_2 == &quot;W&quot;), size=length(data_2), prob = p_grid)) %&gt;% mutate(data_3 = dbinom(sum(data_3 == &quot;W&quot;), size=length(data_3), prob = p_grid)) %&gt;% pivot_longer( cols = starts_with(&quot;data&quot;), names_to = &quot;data&quot;, values_to = &quot;observations&quot; ) %&gt;% mutate(unstd_posterior = observations * prior) %&gt;% mutate(posterior = unstd_posterior / sum(unstd_posterior)) ggplot(data_for_plots) + aes(x = p_grid, y = posterior) + geom_line() + labs(x = &quot;Proportion of Water&quot;, y = &quot;Posterior Probability&quot;) + theme_minimal() + facet_wrap(vars(data), nrow = 1) 2M3. Suppose there are two globes, one for Earth and one for Mars. The Earth globe is 70% covered in water. The Mars globe is 100% land. Further suppose that one of these globes—you don’t know which—was tossed in the air and produced a “land” observation. Assume that each globe was equally likely to be tossed. Show that the posterior probability that the globe was the Earth, conditional on seeing “land” (Pr(Earth|land)), is 0.23.1 \\(Pr(Earth|land) = 0.23\\) \\(Pr(Earth) = Pr(Mars) = 0.5\\) \\(Pr(land|Earth) = 1 - 0.7 = 0.3\\) \\(Pr(land|Mars) = 1\\) Bayes theorem: \\(Pr(Earth|land) = Pr(land|Earth) * Pr(Earth) / Pr(land|Earth) * Pr(Earth) + Pr(land|Mars) * Pr(Mars)\\) pr_earth_given_land &lt;- 0.3 * 0.5 / (0.3 * 0.5 + 1 * 0.5) pr_earth_given_land ## [1] 0.2307692 2M4. Suppose you have a deck with only three cards. Each card has two sides, and each side is either black or white. One card has two black sides. The second card has one black and one white side. The third card has two white sides. Now suppose all three cards are placed in a bag and shuffled. Someone reaches into the bag and pulls out a card and places it flat on a table. A black side is shown facing up, but you don’t know the color of the side facing down. Show that the probability that the other side is also black is 2/3. Use the counting method (Section 2 of the chapter) to approach this problem. This means counting up the ways that each card could produce the observed data (a black side facing up on the table). bb_ways &lt;- 2 wb_ways &lt;- 1 ww_ways &lt;- 0 data &lt;- c(bb_ways, wb_ways, ww_ways) prior &lt;- c(1, 1, 1) posterior &lt;- prior * data posterior &lt;- posterior / sum(posterior) posterior[1] == 2 / 3 ## [1] TRUE 2M5. Now suppose there are four cards: B/B, B/W, W/W, and another B/B. Again suppose a card is drawn from the bag and a black side appears face up. Again calculate the probability that the other side is black. bb_ways &lt;- 2 wb_ways &lt;- 1 ww_ways &lt;- 0 data &lt;- c(bb_ways, wb_ways, ww_ways) prior &lt;- c(2, 1, 1) posterior &lt;- prior * data posterior &lt;- posterior / sum(posterior) posterior[1] ## [1] 0.8 2M6. Imagine that black ink is heavy, and so cards with black sides are heavier than cards with white sides. As a result, it’s less likely that a card with black sides is pulled from the bag. So again assume there are three cards: B/B, B/W, and W/W. After experimenting a number of times, you conclude that for every way to pull the B/B card from the bag, there are 2 ways to pull the B/W card and 3 ways to pull the W/W card. Again suppose that a card is pulled and a black side appears face up. Show that the probability the other side is black is now 0.5. Use the counting method, as before. bb_ways &lt;- 2 wb_ways &lt;- 1 ww_ways &lt;- 0 data &lt;- c(bb_ways, wb_ways, ww_ways) prior &lt;- c(1, 2, 3) posterior &lt;- prior * data posterior &lt;- posterior / sum(posterior) posterior[1] == 0.5 ## [1] TRUE 2M7. Assume again the original card problem, with a single card showing a black side face up. Before looking at the other side, we draw another card from the bag and lay it face up on the table. The face that is shown on the new card is white. Show that the probability that the first card, the one showing a black side, has black on its other side is now 0.75. Use the counting method, if you can. Hint: Treat this like the sequence of globe tosses, counting all the ways to see each observation, for each possible first card. bb_ways &lt;- 2*3 wb_ways &lt;- 1*2 ww_ways &lt;- 0*1 data &lt;- c(bb_ways, wb_ways, ww_ways) prior &lt;- c(1, 1, 1) posterior &lt;- prior * data posterior &lt;- posterior / sum(posterior) posterior[1] == 0.75 ## [1] TRUE 2H1. Suppose there are two species of panda bear. Both are equally common in the wild and live in the same places. They look exactly alike and eat the same food, and there is yet no genetic assay capable of telling them apart. They differ however in their family sizes. Species A gives birth to twins 10% of the time, otherwise birthing a single infant. Species B births twins 20% of the time, otherwise birthing singleton infants. Assume these numbers are known with certainty, from many years of field research. Now suppose you are managing a captive panda breeding program. You have a new female panda of unknown species, and she has just given birth to twins. What is the probability that her next birth will also be twins? Прашањето е, која е веројатноста второто раѓање да е близнаци, кога првото било близнаци, или: \\(Pr(twins2|twins1) = ?\\) Треба да пресметаме: \\(Pr(twins2|twins1) = Pr(twins1, twins2) / Pr(twins)\\) Знаме дека: \\(Pr(twins|A) = 0.1\\) \\(Pr(twins|B) = 0.2\\) \\(Pr(A) = Pr(B) = 0.5\\) Треба да пресметаме и: \\(Pr(twins) = Pr(twins|A)*Pr(A) + Pr(twins|B)*Pr(B)\\) $Pr(twins1, twins2) = Pr(twins|A) * Pr(twins|A) * Pr(A) + Pr(twins|B) * Pr(twins|B) * Pr(B) $ pr_twins &lt;- 0.1 * 0.5 + 0.2 * 0.5 pr_twins1_and_twins2 &lt;- 0.1 * 0.1 * 0.5 + 0.2 * 0.2 * 0.5 pr_twins_2_given_twins1 &lt;- pr_twins1_and_twins2 / pr_twins pr_twins_2_given_twins1 ## [1] 0.1666667 2H2. Recall all the facts from the problem above. Now compute the probability that the panda we have is from species A, assuming we have observed only the first birth and that it was twins. Ова прашање е: \\(Pr(A|twins1) = ?\\) Баезова теорема: \\(Pr(A|twins1) = Pr(twins1|A) * Pr(A) / Pr(twins)\\) Ова може лесно да го пресметаме како: pr_twins_given_a = 0.1 * 0.5 / pr_twins pr_twins_given_a ## [1] 0.3333333 Слично, може да креираме пресметка со која одеднаш ќе ги добиеме двете веројатности, т.е.: \\(Pr(A|twins1)\\) и \\(Pr(B|twins1)\\). p_twins_A &lt;- 0.1 p_twins_B &lt;- 0.2 data_twins &lt;- c(p_twins_A, p_twins_B) prior &lt;- c(1, 1) posterior &lt;- prior * data_twins posterior_2H2 &lt;- posterior / sum(posterior) names(posterior_2H2) = c(&quot;pr_A_twins&quot;, &quot;pr_B_twins&quot;) posterior_2H2 ## pr_A_twins pr_B_twins ## 0.3333333 0.6666667 2H3. Continuing on from the previous problem, suppose the same panda mother has a second birth and that it is not twins, but a singleton infant. Compute the posterior probability that this panda is species A. Сега прашањето е за веројатноста пандата да е вид А ако родила прво близнаци, па потоа едно мече: \\(Pr(A|single) = ?\\) Овде може да се искористи bayеsian updating бидејќи веќе имаме веројатност за А при раѓање близанци од претходната вежба, што ќе биде prior т.е.: \\(Pr(A|twins) = 0.3\\) Новородената панда всушност ја третираме како нови податоци во пресметката data_single &lt;- c(1 - p_twins_A, 1 - p_twins_B) prior_2H3 &lt;- posterior_2H2 posterior &lt;- prior_2H3 * data_single posterior_2H3 &lt;- posterior / sum(posterior) names(posterior_2H3) = c(&quot;pr_A_single&quot;, &quot;pr_B_single&quot;) posterior_2H3 ## pr_A_single pr_B_single ## 0.36 0.64 2H4. A common boast of Bayesian statisticians is that Bayesian inference makes it easy to use all of the data, even if the data are of different types. So suppose now that a veterinarian comes along who has a new genetic test that she claims can identify the species of our mother panda. But the test, like all tests, is imperfect. This is the information you have about the test: **The probability it correctly identifies a species A panda is 0.8.* **The probability it correctly identifies a species B panda is 0.65.* The vet administers the test to your panda and tells you that the test is positive for species A. First ignore your previous information from the births and compute the posterior probability that your panda is species A. Then redo your calculation, now using the birth data as well. Првото прашање е: \\(Pr(A|testA) = ?\\) Знаеме дека: \\(Pr(testA|A) = 0.8\\) \\(Pr(testA|B) = 1 - 0.65 = 0.35\\) тестот точно предвидува вид B 0.65 од случаите, значи, 0.35 се А. test_correct_A &lt;- 0.8 test_correct_B &lt;- 0.35 data &lt;- c(test_correct_A, test_correct_B) prior &lt;- c(1, 1) posterior &lt;- prior * data posterior_2H4 &lt;- posterior / sum(posterior) names(posterior_2H4) = c(&quot;panda_is_A&quot;, &quot;panda_is_B&quot;) posterior_2H4 ## panda_is_A panda_is_B ## 0.6956522 0.3043478 Тука, слично како претходно, како prior го сметаме резултатот т.е. posterior од пресметката со раѓања. prior &lt;- posterior_2H3 posterior &lt;- prior * data posterior_2H4_2 &lt;- posterior / sum(posterior) names(posterior_2H4_2) = c(&quot;panda_is_A&quot;, &quot;panda_is_B&quot;) posterior_2H4_2 ## panda_is_A panda_is_B ## 0.5625 0.4375 На крај: \\(Pr(A|testA,twins,single) = 0.56\\) Веројатноста пандата да е вид А при точен тест за вид А, родени близнаци и потоа едно пандиче е околу 0.56. "],["sampling-the-imaginary.html", "Chapter 3 Sampling the Imaginary", " Chapter 3 Sampling the Imaginary Exercises from Chapter 3 of the book. library(tidyverse) library(rethinking) Лесните прашања го користат кодот од книгата и само правиме пресметки што се опишан во 3.2. Sampling to summarize section на книгата. p_grid &lt;- seq( from=0 , to=1 , length.out=1000 ) prior &lt;- rep( 1 , 1000 ) likelihood &lt;- dbinom( 6 , size=9 , prob=p_grid ) posterior &lt;- likelihood * prior posterior &lt;- posterior / sum(posterior) set.seed(100) samples &lt;- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE ) 3E1. How much posterior probability lies below p = 0.2? mean( samples &lt; 0.2 ) ## [1] 4e-04 3E2. How much posterior probability lies above p = 0.8? mean( samples &gt; 0.8 ) ## [1] 0.1116 3E3. How much posterior probability lies between p = 0.2 and p = 0.8? mean( samples &gt; 0.2 &amp; samples &lt; 0.8 ) ## [1] 0.888 Аll three should be 1. sum(mean( samples &lt; 0.2 ), mean( samples &gt; 0.8 ), mean( samples &gt; 0.2 &amp; samples &lt; 0.8 )) ## [1] 1 3E4. 20% of the posterior probability lies below which value of p? quantile(samples, 0.2) ## 20% ## 0.5185185 3E5. 20% of the posterior probability lies above which value of p? quantile(samples, 0.8) ## 80% ## 0.7557558 3E6. Which values of p contain the narrowest interval equal to 66% of the posterior probability? HPDI( samples , prob=0.66 ) ## |0.66 0.66| ## 0.5085085 0.7737738 Trying the tidybayes functions. The results are the same. tidybayes::mode_hdi(samples, .width = .66) ## y ymin ymax .width .point .interval ## 1 0.6477573 0.5085085 0.7737738 0.66 mode hdi tidybayes::hdi(samples, .width = .66) ## [,1] [,2] ## [1,] 0.5085085 0.7737738 3E7. Which values of p contain 66% of the posterior probability, assuming equal posterior probability both below and above the interval? PI(samples, prob = 0.66) ## 17% 83% ## 0.5025025 0.7697698 3M1. Suppose the globe tossing data had turned out to be 8 water in 15 tosses. Construct the posterior distribution, using grid approximation. Use the same flat prior as before. Ова е истиот проблем како лесните, единствено ги менуваме параметрите на dbinom. p_grid &lt;- seq(from=0, to=1, length.out=1000) prior &lt;- rep(1, 1000) likelihood &lt;- dbinom(8, size=15, prob=p_grid) posterior &lt;- likelihood * prior posterior_3m1 &lt;- posterior / sum(posterior) plot(posterior, type = &quot;l&quot;) 3M2. Draw 10,000 samples from the grid approximation from above. Then use the samples to calculate the 90% HPDI for p. samples &lt;- sample( p_grid , prob=posterior_3m1 , size=1e4 , replace=TRUE ) HPDI( samples , prob=0.9 ) ## |0.9 0.9| ## 0.3293293 0.7167167 3M3. Construct a posterior predictive check for this model and data. This means simulate the distribution of samples, averaging over the posterior uncertainty in p. Ова значи да симулираме податоци од моделот. Делот 3.3.2 од книгата. set.seed(123) simulate_w &lt;- rbinom( 1e4 , size=15 , prob=samples ) simplehist(simulate_w) What is the probability of observing 8 water in 15 tosses? mean(simulate_w == 8) ## [1] 0.1489 3M4. Using the posterior distribution constructed from the new (8/15) data, now calculate the probability of observing 6 water in 9 tosses. set.seed(123) simulate_w &lt;- rbinom( 1e4 , size=9 , prob=samples ) mean(simulate_w == 6) ## [1] 0.1732 3M5. Start over at 3M1, but now use a prior that is zero below p = 0.5 and a constant above p = 0.5. This corresponds to prior information that a majority of the Earth’s surface is water. Repeat each problem above and compare the inferences. What difference does the better prior make? If it helps, compare inferences (using both priors) to the true value p = 0.7. p_grid &lt;- seq( from=0 , to=1 , length.out=1000 ) prior3m5 &lt;- ifelse(p_grid &lt; 0.5, 0, 0.5) likelihood &lt;- dbinom( 8 , size=15 , prob=p_grid ) posterior &lt;- likelihood * prior3m5 posterior_3m5 &lt;- posterior / sum(posterior) plot(p_grid, posterior , type = &quot;l&quot;) Сега добиваме posterior дистрибуција која што за вредностите на параметарот под 0.5 практично кажува дека нема шанси да се случат. samples &lt;- sample( p_grid , prob=posterior_3m5 , size=1e4 , replace=TRUE ) HPDI( samples , prob=0.9 ) ## |0.9 0.9| ## 0.5005005 0.7167167 HPDI интервалот исто така е многу потесен споредено со 3М2. 3M6. Suppose you want to estimate the Earth’s proportion of water very precisely. Specifically, you want the 99% percentile interval of the posterior distribution of p to be only 0.05 wide. This means the distance between the upper and lower bound of the interval should be 0.05. How many times will you have to toss the globe to do this? Ова решение го презедов од решенијата што ги пишува Richard McEarleth. Не ми беше јасно прашањето се додека не видов што прави кодот во решението. Во овој проблем, всушност непознато е колку обзервации треба да направиме за да ја добиеме саканата прецизност. Решението е такво што ја бара прецизност на серија обзервации (од 20 до 2000). f &lt;- function(N) { p_true &lt;- 0.7 W &lt;- rbinom(1, size = N, prob = p_true) prob_grid &lt;- seq(0, 1, length.out = 1000) prior &lt;- rep(1, 1000) prob_data &lt;- dbinom(W, size = N, prob = prob_grid) posterior &lt;- prob_data * prior posterior &lt;- posterior / sum(posterior) samples &lt;- sample(p_grid, prob = posterior, size = 1e4, replace = TRUE) PI99 &lt;- PI(samples, .99) as.numeric(PI99[2] - PI99[1]) } Nlist &lt;- c(20, 50, 100, 200, 500, 1000, 2000) Nlist &lt;- rep(Nlist, each = 100) width &lt;- sapply(Nlist, f) plot(Nlist, width) abline(h = 0.05, col = &quot;red&quot;) 3H1. Using grid approximation, compute the posterior distribution for the probability of a birth being a boy. Assume a uniform prior probability. data(homeworkch3) all_boys &lt;- sum(birth1) + sum(birth2) p_grid &lt;- seq( from=0 , to=1 , length.out=1000 ) prior3h1 &lt;- prior &lt;- rep(1,length(p_grid)) likelihood &lt;- dbinom( all_boys , size=length(birth1) + length(birth2) , prob=p_grid ) posterior &lt;- likelihood * prior3h1 posterior_3h1 &lt;- posterior / sum(posterior) plot(p_grid, posterior_3h1 , type=&quot;l&quot; ) abline( v=0.5 , lty=2 ) Which parameter value maximizes the posterior probability? p_grid[ which.max(posterior) ] ## [1] 0.5545546 Можеби интересно да се види како ова би се напишало во tidyverse код: data_for_3h1 &lt;- tibble(p_grid_3h1 = seq(from = 0, to = 1, length.out = 1000)) %&gt;% mutate(prior_3h1 = 1) %&gt;% mutate(data_for_3h1 = dbinom( all_boys , size=length(birth1) + length(birth2) , prob=p_grid_3h1 )) %&gt;% mutate(posterior_3h1 = data_for_3h1 * prior_3h1) %&gt;% mutate(posterior_3h1_st = posterior_3h1 / sum(posterior_3h1)) ggplot(data_for_3h1) + aes(x = p_grid_3h1, y = posterior_3h1_st) + geom_line() + theme_minimal() 3H2. Using the sample function, draw 10,000 random parameter values from the posterior distribution you calculated above. Use these samples to estimate the 50%, 89%, and 97% highest posterior density intervals. samples &lt;- sample( data_for_3h1$p_grid_3h1 , prob=data_for_3h1$posterior_3h1_st , size=1e4 , replace=TRUE ) plot(samples) tidybayes::hdi(samples, .width = .50) ## [,1] [,2] ## [1,] 0.5255255 0.5725726 tidybayes::hdi(samples, .width = .89) ## [,1] [,2] ## [1,] 0.5005005 0.6126126 tidybayes::hdi(samples, .width = .97) ## [,1] [,2] ## [1,] 0.4774775 0.6276276 3H3. Use rbinom to simulate 10,000 replicates of 200 births. You should end up with 10,000 numbers, each one a count of boys out of 200 births. Compare the distribution of predicted numbers of boys to the actual count in the data (111 boys out of 200 births). There are many good ways to visualize the simulations, but the dens command (part of the rethinking package) is probably the easiest way in this case. Does it look like the model fits the data well? That is, does the distribution of predictions include the actual observation as a central, likely outcome? simulate &lt;- tibble(births = rbinom( 10000 , size=200 , prob=samples )) ggplot(simulate) + aes(x = births) + geom_density() + theme_minimal() + geom_vline(xintercept = sum(birth1 + birth2), color = &quot;red&quot;) + geom_vline(xintercept = mean(simulate$births, na.rm = TRUE), color = &quot;blue&quot;) + labs(caption = &quot;Blue line is mean of simulated data, red line is number of boys from data.&quot;) 3H4. Now compare 10,000 counts of boys from 100 simulated first-borns only to the number of boys in the first births, birth1. How does the model look in this light? simulate &lt;- tibble(births = rbinom( 10000 , size=100 , prob=samples )) ggplot(simulate) + aes(x = births) + theme_minimal() + geom_density() + geom_vline(xintercept = sum(birth1), color = &quot;red&quot;) + geom_vline(xintercept = mean(simulate$births, na.rm = TRUE), color = &quot;blue&quot;) + labs(caption = &quot;Blue line is mean of simulated data, red line is number of first-born boys from data.&quot;) 3H5. The model assumes that sex of first and second births are independent. To check this assumption, focus now on second births that followed female first borns. Compare 10,000 simulated counts of boys to only those second births that followed girls. To do this correctly, you need to count the number of first borns who were girls and simulate that many births, 10,000 times. Compare the counts of boys in your simulations to the actual observed count of boys following girls. How does the model look in this light? Any guesses what is going on in these data? first_born_girls &lt;- sum(birth1==0) simulate &lt;- tibble(births = rbinom(10000, size=first_born_girls, prob=samples)) ggplot(simulate) + aes(x = births) + geom_density() + theme_minimal() + geom_vline(xintercept = sum(birth1 + birth2), color = &quot;red&quot;) + geom_vline(xintercept = mean(simulate$births, na.rm = TRUE), color = &quot;blue&quot;) + labs(caption = &quot;Blue line is mean of simulated data, red line is number of first-born girls from data.&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
